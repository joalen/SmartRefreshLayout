name: JPF Runner

on:
  push:

jobs:
  run-asan:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]

    steps:
    - name: Checkout repository with specific project SHA
      uses: actions/checkout@v2
      with: 
        ref: e36dcec52005f93d2122ac9953f6a9e28f427f65
        
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Build project
      run: ./gradlew build -x test -x lint

    - name: Clone and build jpf-core
      run: |
        git clone https://github.com/javapathfinder/jpf-core.git /tmp/jpf-core
        cd /tmp/jpf-core
        ./gradlew buildJars

    - name: Run JPF on JAR files
      shell: bash
      run: |
        #!/bin/bash

        # Set the current working directory
        directory=$(pwd)

        # Define the path to the RunJPF.jar file
        runjpf_jar="/tmp/jpf-core/build/RunJPF.jar"

        # Find all .jar files in the specified directory and its subdirectories, excluding those with "SNAPSHOT" in the name
        jar_files=$(find "$directory" -type f -name "*.jar")

        # Loop through each .jar file found
        for jar_file in $jar_files; 
        do
            # Extract the directory containing the .jar file
            jar_dir=$(dirname "$jar_file")
            
            # Extract the main class from the jar's manifest
            main_class=$(unzip -p "$jar_file" META-INF/MANIFEST.MF | grep -i 'Main-Class' | awk -F': ' '{print $2}' | tr -d '\r')

            if [ -z "$main_class" ]; then
                echo "Main class not found in $jar_file, skipping..."
                continue
            fi
            
            # Construct the command
            command="java -jar $runjpf_jar +classpath=$jar_file $main_class"
            
            # Execute the command
            echo "Executing: $command"
            $command
        done
